// ==========================================================================
// CODE HIGHLIGHTING
// ========================================================================== 
// Almost entirely borrowed from https://github.com/richleland/pygments-css/blob/master/github.css
//
// We’ve also removed all of the bold weights because browsers will nastily interpolate 
// if the user doesnt have that font installed.
//

.highlight {
    @include font-scale(base, mono);

    @include respond-to("medium and above") {
        @include font-scale(large, mono);
    }
    margin: rem-calc(20) 0;
    border: solid 1px #ddd;
    border-radius: 3px;
    background: #fff;
    word-break: inherit;
    word-wrap: inherit;
    overflow-x: auto;
    td {
        padding: 8px 15px;
    }
    .gl {
        background: #fafafa;
        border-right: 1px solid #ddd;
        color: #999;

        // Stop line numbers being visually selected
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    .c { color: #999988; } // Comment
    .err { color: #445588; background-color: #fafafa } // Error
    .k { color: #000000; } // Keyword
    .o { color: #000000;  } // Operator
    .cm { color: #999988; } // Comment.Multiline
    .cp { color: #999999; } // Comment.Preproc
    .c1 { color: #999988; } // Comment.Single
    .cs { color: #999999; } // Comment.Special
    .gd { color: #000000; background-color: #ffdddd } // Generic.Deleted
    .ge { color: #000000; } // Generic.Emph
    .gr { color: #aa0000 } // Generic.Error
    .gh { color: #999999 } // Generic.Heading
    .gi { color: #000000; background-color: #ddffdd } // Generic.Inserted
    .go { color: #888888 } // Generic.Output
    .gp { color: #555555 } // Generic.Prompt
    .gs {  } // Generic.Strong
    .gu { color: #aaaaaa } // Generic.Subheading
    .gt { color: #aa0000 } // Generic.Traceback
    .kc { color: #000000;  } // Keyword.Constant
    .kd { color: #000000;  } // Keyword.Declaration
    .kn { color: #000000;  } // Keyword.Namespace
    .kp { color: #000000;  } // Keyword.Pseudo
    .kr { color: #000000;  } // Keyword.Reserved
    .kt { color: #445588;  } // Keyword.Type
    .m { color: #009999 } // Literal.Number
    .s { color: #d01040 } // Literal.String
    .na { color: #008080 } // Name.Attribute
    .nb { color: #0086B3 } // Name.Builtin
    .nc { color: #445588;  } // Name.Class
    .no { color: #008080 } // Name.Constant
    .nd { color: #3c5d5d;  } // Name.Decorator
    .ni { color: #800080 } // Name.Entity
    .ne { color: #990000;  } // Name.Exception
    .nf { color: #990000;  } // Name.Function
    .nl { color: #990000;  } // Name.Label
    .nn { color: #555555 } // Name.Namespace
    .nt { color: #445588 } // Name.Tag 
    .nv { color: #008080 } // Name.Variable
    .ow { color: #000000;  } // Operator.Word
    .w { color: #bbbbbb } // Text.Whitespace
    .mf { color: #009999 } // Literal.Number.Float
    .mh { color: #009999 } // Literal.Number.Hex
    .mi { color: #009999 } // Literal.Number.Integer
    .mo { color: #009999 } // Literal.Number.Oct
    .sb { color: #d01040 } // Literal.String.Backtick
    .sc { color: #d01040 } // Literal.String.Char
    .sd { color: #d01040 } // Literal.String.Doc
    .s2 { color: #d01040 } // Literal.String.Double
    .se { color: #d01040 } // Literal.String.Escape
    .sh { color: #d01040 } // Literal.String.Heredoc
    .si { color: #d01040 } // Literal.String.Interpol
    .sx { color: #d01040 } // Literal.String.Other
    .sr { color: #009926 } // Literal.String.Regex
    .s1 { color: #d01040 } // Literal.String.Single
    .ss { color: #990073 } // Literal.String.Symbol
    .bp { color: #999999 } // Name.Builtin.Pseudo
    .vc { color: #008080 } // Name.Variable.Class
    .vg { color: #008080 } // Name.Variable.Global
    .vi { color: #008080 } // Name.Variable.Instance
    .il { color: #009999 } // Literal.Number.Integer.Long
}

// it’s probably best to abstract this into a mixin
.highlight.scss {
    &:before {
        content: "SCSS";
        @include font-scale(base, mono);

    }
}


